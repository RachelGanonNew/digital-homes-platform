{"version":3,"file":"static/js/40.3afb37d8.chunk.js","mappings":"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","sources":["pages/DashboardPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  ChartBarIcon,\n  CurrencyDollarIcon,\n  HomeIcon,\n  ArrowTrendingUpIcon,\n  ArrowUpIcon,\n  ArrowDownIcon,\n  CalendarIcon\n} from '@heroicons/react/24/outline';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { Line, Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  Tooltip,\n  Legend\n);\n\nconst DashboardPage = () => {\n  const [tsLabels, setTsLabels] = useState([]);\n  const [tsData, setTsData] = useState([]);\n  const [divLabels, setDivLabels] = useState([]);\n  const [divData, setDivData] = useState([]);\n  // Removed unused loading state\n\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const [tsRes, divRes] = await Promise.all([\n          axios.get('/api/portfolio/timeseries?months=12'),\n          axios.get('/api/portfolio/dividends?months=6')\n        ]);\n        if (!mounted) return;\n        setTsLabels(tsRes.data.labels || []);\n        setTsData(tsRes.data.data || []);\n        setDivLabels(divRes.data.labels || []);\n        setDivData(divRes.data.data || []);\n      } catch (e) {\n        // Fallback to mock data if backend not available yet\n        setTsLabels(['Sep','Oct','Nov','Dec','Jan','Feb','Mar','Apr','May','Jun','Jul','Aug']);\n        setTsData([98500,100200,102000,104500,105200,108300,112000,117500,120000,121400,123200,125430]);\n        setDivLabels(['Mar','Apr','May','Jun','Jul','Aug']);\n        setDivData([120,140,135,150,160,155]);\n      } finally {\n        // no-op\n      }\n    })();\n    return () => { mounted = false; };\n  }, []);\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-6 py-12\">\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-8\">Dashboard</h1>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Portfolio Value</p>\n              <p className=\"text-2xl font-bold text-gray-900\">$125,430</p>\n            </div>\n            <CurrencyDollarIcon className=\"w-8 h-8 text-primary-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">24h Change</p>\n              <div className=\"flex items-center gap-2\">\n                <ArrowUpIcon className=\"w-5 h-5 text-green-600\" />\n                <p className=\"text-2xl font-bold text-gray-900\">+2.3%</p>\n              </div>\n            </div>\n            <ArrowTrendingUpIcon className=\"w-8 h-8 text-secondary-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Properties</p>\n              <p className=\"text-2xl font-bold text-gray-900\">5</p>\n            </div>\n            <HomeIcon className=\"w-8 h-8 text-gray-600\" />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n            <ChartBarIcon className=\"w-5 h-5 text-primary-600\" />\n            Performance\n          </h2>\n          <div className=\"space-y-8\">\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <p className=\"text-sm text-gray-600\">Portfolio Value (Last 12 Months)</p>\n                <span className=\"text-xs text-gray-500\">Mock data</span>\n              </div>\n              <div className=\"h-64\">\n              <Line\n                data={{\n                  labels: tsLabels,\n                  datasets: [\n                    {\n                      label: 'Value ($)',\n                      data: tsData,\n                      borderColor: 'rgba(59,130,246,1)',\n                      backgroundColor: 'rgba(59,130,246,0.15)',\n                      fill: true,\n                      tension: 0.35,\n                      pointRadius: 2\n                    }\n                  ]\n                }}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  plugins: { legend: { display: false }, tooltip: { mode: 'index', intersect: false } },\n                  scales: {\n                    x: { grid: { display: false } },\n                    y: { grid: { color: '#f1f5f9' }, ticks: { callback: (v) => `$${v.toLocaleString()}` } }\n                  }\n                }}\n              />\n              </div>\n            </div>\n\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <p className=\"text-sm text-gray-600\">Monthly Dividends</p>\n                <span className=\"text-xs text-gray-500\">Mock data</span>\n              </div>\n              <div className=\"h-56\">\n              <Bar\n                data={{\n                  labels: divLabels,\n                  datasets: [\n                    {\n                      label: 'Dividends ($)',\n                      data: divData,\n                      backgroundColor: 'rgba(16,185,129,0.6)',\n                      borderColor: 'rgba(16,185,129,1)'\n                    }\n                  ]\n                }}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  plugins: { legend: { display: false }, tooltip: { mode: 'index', intersect: false } },\n                  scales: {\n                    x: { grid: { display: false } },\n                    y: { grid: { color: '#f1f5f9' } }\n                  }\n                }}\n              />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\n            <CalendarIcon className=\"w-5 h-5 text-primary-600\" />\n            Recent Activity\n          </h2>\n          <ul className=\"space-y-2 text-gray-700\">\n            <li className=\"flex items-center gap-2\"><ArrowUpIcon className=\"w-4 h-4 text-green-600\" /> Bought 10 shares of PROP_1</li>\n            <li className=\"flex items-center gap-2\"><ArrowDownIcon className=\"w-4 h-4 text-red-600\" /> Sold 5 shares of PROP_2</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardPage;"],"names":["ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Tooltip","Legend","DashboardPage","tsLabels","setTsLabels","useState","tsData","setTsData","divLabels","setDivLabels","divData","setDivData","useEffect","mounted","tsRes","divRes","Promise","all","axios","get","data","labels","e","_jsxs","className","children","_jsx","CurrencyDollarIcon","ArrowUpIcon","ArrowTrendingUpIcon","HomeIcon","ChartBarIcon","Line","datasets","label","borderColor","backgroundColor","fill","tension","pointRadius","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","scales","x","grid","y","color","ticks","callback","v","concat","toLocaleString","Bar","CalendarIcon","ArrowDownIcon"],"sourceRoot":""}